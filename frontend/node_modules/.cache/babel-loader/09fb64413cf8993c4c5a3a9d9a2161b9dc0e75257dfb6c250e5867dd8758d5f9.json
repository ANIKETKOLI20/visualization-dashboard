{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anike\\\\mern-stack-projects\\\\visualization-dashboard\\\\frontend\\\\src\\\\pages\\\\InsightsChart\\\\InsightsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Container, Paper, Typography } from '@mui/material';\nimport Chart from 'chart.js/auto'; // Automatically registers components\nimport 'chart.js/auto';\nimport './InsightsChart.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsightsChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/insights');\n        const insights = response.data;\n\n        // Check if insights is an array before proceeding\n        if (Array.isArray(insights)) {\n          const sectors = insights.map(insight => insight.sector);\n          const intensities = insights.map(insight => insight.intensity);\n          const newChartData = {\n            labels: sectors,\n            datasets: [{\n              label: 'Intensity',\n              data: intensities,\n              backgroundColor: 'rgba(75, 192, 192, 0.6)'\n            }]\n          };\n\n          // Destroy previous chart instance if it exists\n          if (chartRef.current) {\n            chartRef.current.destroy();\n          }\n          setChartData(newChartData);\n        } else {\n          console.error('Fetched insights data is not an array:', insights);\n        }\n      } catch (error) {\n        console.error('Error fetching insights data:', error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Sector Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), chartData.labels ? /*#__PURE__*/_jsxDEV(Bar, {\n        ref: chartRef,\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"p\",\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(InsightsChart, \"9yfqS4Wur7g4UX4DhlcVvA8I8nY=\");\n_c = InsightsChart;\nexport default InsightsChart;\nvar _c;\n$RefreshReg$(_c, \"InsightsChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Bar","Container","Paper","Typography","Chart","jsxDEV","_jsxDEV","InsightsChart","_s","chartData","setChartData","chartRef","fetchData","response","get","insights","data","Array","isArray","sectors","map","insight","sector","intensities","intensity","newChartData","labels","datasets","label","backgroundColor","current","destroy","console","error","message","children","elevation","style","padding","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/anike/mern-stack-projects/visualization-dashboard/frontend/src/pages/InsightsChart/InsightsChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Container, Paper, Typography } from '@mui/material';\r\nimport Chart from 'chart.js/auto'; // Automatically registers components\r\nimport 'chart.js/auto';\r\nimport './InsightsChart.css'; // Assuming you have a CSS file for styling\r\n\r\nconst InsightsChart = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/insights');\r\n        const insights = response.data;\r\n\r\n        // Check if insights is an array before proceeding\r\n        if (Array.isArray(insights)) {\r\n          const sectors = insights.map(insight => insight.sector);\r\n          const intensities = insights.map(insight => insight.intensity);\r\n\r\n          const newChartData = {\r\n            labels: sectors,\r\n            datasets: [\r\n              {\r\n                label: 'Intensity',\r\n                data: intensities,\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n              }\r\n            ]\r\n          };\r\n\r\n          // Destroy previous chart instance if it exists\r\n          if (chartRef.current) {\r\n            chartRef.current.destroy();\r\n          }\r\n\r\n          setChartData(newChartData);\r\n        } else {\r\n          console.error('Fetched insights data is not an array:', insights);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching insights data:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Paper elevation={3} style={{ padding: '20px' }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Sector Intensity\r\n        </Typography>\r\n        {chartData.labels ? (\r\n          <Bar\r\n            ref={chartRef}\r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              scales: {\r\n                y: { beginAtZero: true }\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            Loading data...\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InsightsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}