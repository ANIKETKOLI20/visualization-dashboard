{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anike\\\\mern-stack-projects\\\\visualization-dashboard\\\\frontend\\\\src\\\\pages\\\\InsightsChart\\\\InsightsChart.js\",\n  _s = $RefreshSig$();\n// src/components/InsightsChart.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Container, Paper, Typography } from '@mui/material';\nimport './InsightsChart.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsightsChart = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/insights');\n        const insights = response.data;\n        if (!insights || !Array.isArray(insights)) {\n          throw new Error('Fetched data is not an array');\n        }\n        const sectors = insights.map(insight => insight.sector);\n        const intensities = insights.map(insight => insight.intensity);\n        setChartData({\n          labels: sectors,\n          datasets: [{\n            label: 'Intensity',\n            data: intensities,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }]\n        });\n      } catch (error) {\n        setError('Error fetching insights data: ' + error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Sector Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"p\",\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(InsightsChart, \"mdDxSYzCewbEZ8IkfmlbaM2G1/A=\");\n_c = InsightsChart;\nexport default InsightsChart;\nvar _c;\n$RefreshReg$(_c, \"InsightsChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Container","Paper","Typography","jsxDEV","_jsxDEV","InsightsChart","_s","chartData","setChartData","error","setError","fetchData","response","get","insights","data","Array","isArray","Error","sectors","map","insight","sector","intensities","intensity","labels","datasets","label","backgroundColor","message","children","elevation","style","padding","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","options","responsive","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/anike/mern-stack-projects/visualization-dashboard/frontend/src/pages/InsightsChart/InsightsChart.js"],"sourcesContent":["// src/components/InsightsChart.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Container, Paper, Typography } from '@mui/material';\r\nimport './InsightsChart.css'; // Assuming you have a CSS file for styling\r\n\r\nconst InsightsChart = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/insights');\r\n        const insights = response.data;\r\n\r\n        if (!insights || !Array.isArray(insights)) {\r\n          throw new Error('Fetched data is not an array');\r\n        }\r\n\r\n        const sectors = insights.map(insight => insight.sector);\r\n        const intensities = insights.map(insight => insight.intensity);\r\n\r\n        setChartData({\r\n          labels: sectors,\r\n          datasets: [\r\n            {\r\n              label: 'Intensity',\r\n              data: intensities,\r\n              backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            }\r\n          ]\r\n        });\r\n      } catch (error) {\r\n        setError('Error fetching insights data: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Paper elevation={3} style={{ padding: '20px' }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Sector Intensity\r\n        </Typography>\r\n        {error ? (\r\n          <Typography variant=\"h6\" component=\"p\" color=\"error\">\r\n            {error}\r\n          </Typography>\r\n        ) : (\r\n          <Bar\r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              scales: {\r\n                y: { beginAtZero: true }\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InsightsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}